import{_ as e,c as a,a0 as i,o as t}from"./chunks/framework.BGabeMLJ.js";const n="/assets/services.CBnbp6O4.png",u=JSON.parse('{"title":"FLAME Node Deployment","description":"","frontmatter":{},"headers":[],"relativePath":"guide/deployment/node-installation.md","filePath":"guide/deployment/node-installation.md"}'),l={name:"guide/deployment/node-installation.md"};function h(o,s,r,p,d,k){return t(),a("div",null,s[0]||(s[0]=[i(`<h1 id="flame-node-deployment" tabindex="-1">FLAME Node Deployment <a class="header-anchor" href="#flame-node-deployment" aria-label="Permalink to &quot;FLAME Node Deployment&quot;">​</a></h1><p>This section will provide instructions for deploying the FLAME node software on your server.</p><p><strong>These instructions assume that you have done the following:</strong></p><ul><li><a href="./node-registration.html#creating-a-node-in-the-hub">Node has been registered in the Hub UI</a></li><li><a href="./node-registration.html#robot-credentials">Credentials for your node&#39;s robot were generated and saved</a></li><li><a href="./node-registration.html#crypto">A keypair was generated</a> and the private key was saved as <code>private_key.pem</code></li></ul><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h2><h3 id="hardware" tabindex="-1">Hardware <a class="header-anchor" href="#hardware" aria-label="Permalink to &quot;Hardware&quot;">​</a></h3><ul><li>8 cores</li><li>16GB (minimum) - 32GB (recommended) RAM</li><li>100GB storage</li></ul><h3 id="networking" tabindex="-1">Networking <a class="header-anchor" href="#networking" aria-label="Permalink to &quot;Networking&quot;">​</a></h3><ul><li>Ports 22 and 443 are open</li><li>Access to the internet for communicating with the Hub</li><li>A hostname that directs to the server running the FLAME Node software</li></ul><h3 id="software" tabindex="-1">Software <a class="header-anchor" href="#software" aria-label="Permalink to &quot;Software&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>A quick start guide to installing microk8s and Helm can be found <a href="./microk8s-quickstart.html">here</a>.</p></div><h4 id="kubernetes" tabindex="-1">Kubernetes <a class="header-anchor" href="#kubernetes" aria-label="Permalink to &quot;Kubernetes&quot;">​</a></h4><p>Kubernetes (also known as k8s) is a container management software package which allows for rapid deployment and scaling of multiple applications and service. There are multiple distributions of k8s available for a variety of system configurations. The only requirement for the FLAME Node software is that a network plugin (e.g. Calico) is installed in your k8s installation to allow for network policy management. The following distributions have been tested for use with the Node software:</p><ul><li><a href="https://microk8s.io/docs/getting-started" target="_blank" rel="noreferrer">microk8s</a></li><li><a href="https://minikube.sigs.k8s.io/docs/start/?arch=%2Fwindows%2Fx86-64%2Fstable%2F.exe+download" target="_blank" rel="noreferrer">minikube</a></li><li><a href="https://kubernetes.io/docs/setup/" target="_blank" rel="noreferrer">Kubernetes</a></li></ul><h4 id="helm" tabindex="-1">Helm <a class="header-anchor" href="#helm" aria-label="Permalink to &quot;Helm&quot;">​</a></h4><p>The FLAME Node software package is a compilation of multiple services working together which require several configuration parameters to be properly set during installation. <a href="https://helm.sh/" target="_blank" rel="noreferrer">Helm</a> is k8s application management tool that simplifies deploying complex software. It enables one to easily install, update, or rollback multi-service software and we highly recommend using this tool for installing the FLAME Node. <a href="https://helm.sh/docs/intro/install/" target="_blank" rel="noreferrer">See the Helm website</a> for instructions on how to install Helm on your system.</p><h2 id="preparation" tabindex="-1">Preparation <a class="header-anchor" href="#preparation" aria-label="Permalink to &quot;Preparation&quot;">​</a></h2><p>In order to deploy a node, you will need the following pieces of information from the Hub:</p><ol><li>Robot ID</li><li>Robot Secret (not hashed!)</li><li>Private Key</li></ol><p>With this information, you can either edit the <code>values.yaml</code> file included with the FLAME Node helm chart or create your own values template file to be used during deployment. Here is a minimal example of a values file:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  hub</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      robotUser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;Robot ID&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      robotSecret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;Robot Secret&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ingress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      hostname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://your.node.ui.domain.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flame-node-result-service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  hub</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    crypto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      privateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        -----BEGIN PRIVATE KEY-----</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        myExamplePrivateKey</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        -----END PRIVATE KEY-----</span></span></code></pre></div><p>Be sure to enable <code>ingress</code> in your values file, otherwise, your hostname will not resolve.</p><p>The crypto private key can also be provided using an existing secret. For more information on how to do this, see <a href="./node-troubleshooting.html#using-an-existing-secret-for-the-crypto-private-key">Using an Existing Secret for the Crypto Private Key</a>.</p><div class="info custom-block"><p class="custom-block-title">Note</p><p>The default installation method assumes that if you have SSL enabled (i.e. using HTTPS), then this is handled by a reverse proxy. If this is not the case, you need to disable the proxy headers for keycloak like shown in this <a href="/files/values_no_reverse_proxy_example.yaml" download>example</a>.</p></div><h3 id="keycloak" tabindex="-1">Keycloak <a class="header-anchor" href="#keycloak" aria-label="Permalink to &quot;Keycloak&quot;">​</a></h3><p>By default, the FLAME Node package deploys keycloak as part of the installation. The clients and their secrets are all generated and configured within this included IDP. If you wish to your own IDP, then clients for the Node Hub Adapter and the Node UI will have to be created and their secrets set in the values template. See the <a href="#using-your-own-idp">Using Your Own IDP</a> section for more information.</p><h3 id="using-your-own-idp" tabindex="-1">Using Your Own IDP <a class="header-anchor" href="#using-your-own-idp" aria-label="Permalink to &quot;Using Your Own IDP&quot;">​</a></h3><p>For better security, this software uses Keycloak for authenticating the various services and users that make up FLAME. Keycloak is installed along with the other services and is required for the creation and management of the individual analyses. Using the keycloak console, the admin you can add additional users who can access the FLAME UI, but you may also use your own IDP for user authentication if you wish.</p><p>To enable this, first you must create individual clients for both the Node UI and the Hub Adapter in your IDP. Be sure to enable client authentication and take note of the client ID and secret for both of these newly created clients as this information along with the (accessible) URL for your IDP must be provided in the <code>values.yaml</code>. An example of how to configure this in for your cluster can be seen in this <a href="/files/values_separate_idp.yaml" download>separate IDP example</a>.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>At this point, you should have a custom values file (e.g. <code>my-values.yaml</code>) which contains the robot credentials and private key for your node. If you have all of this information, then you can proceed with deploying the FLAME Node by either using the FLAME repo <u><strong>OR</strong></u> cloning the Github repository.</p><div class="info custom-block"><p class="custom-block-title">Note</p><p>The Helm release name <code>flame-node</code> is used in the following examples, but any release name can be used in place of it.</p></div><h3 id="using-the-flame-repo" tabindex="-1">Using the FLAME repo <a class="header-anchor" href="#using-the-flame-repo" aria-label="Permalink to &quot;Using the FLAME repo&quot;">​</a></h3><p>The FLAME helm repository can be added to your list of available repos and then used to deploy the node software. First, add the FLAME repo:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flame</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://PrivateAIM.github.io/helm</span></span></code></pre></div><p>Deploy the FLAME Node using your values file</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flame-node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-values.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flame/flame-node</span></span></code></pre></div><h3 id="using-the-github-repository" tabindex="-1">Using the GitHub Repository <a class="header-anchor" href="#using-the-github-repository" aria-label="Permalink to &quot;Using the GitHub Repository&quot;">​</a></h3><p>Users can clone the FLAME Node Helm charts by cloning the <code>helm</code> <a href="https://github.com/PrivateAIM/helm" target="_blank" rel="noreferrer">repository</a> from GitHub. The <code>charts/flame-node/</code> directory contains the parent helm chart used for the deployment.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/PrivateAIM/helm.git</span></span></code></pre></div><p>Navigate to the FLAME Node helm chart directory and compile its sub-charts:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> helm/charts/flame-node/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dependency</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><p>Then you can deploy the FLAME Node using this local helm chart:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flame-node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-values.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Startup Time</p><p>Several services are deployed as part of this Helm chart and some need to execute initialization containers in order to properly import the configuration. This can cause the <code>helm install</code> to hang for a few minutes while everything is deployed and verified, so please have patience during this step and do not prematurely cancel the command.</p></div><h2 id="deploying-without-a-resolvable-domain-name-fqdn" tabindex="-1">Deploying without a Resolvable Domain Name (FQDN) <a class="header-anchor" href="#deploying-without-a-resolvable-domain-name-fqdn" aria-label="Permalink to &quot;Deploying without a Resolvable Domain Name (FQDN)&quot;">​</a></h2><p>It is highly recommended to deploy the FLAME Node using a domain or hsotname that is configured within your institution&#39;s DNS or proxy. However, there may be circumstances in which you want to deploy the software without providing an accessible domain or hostname. In such cases, thee are a couple of options for configuring the FLAME Node such that you can still access the Node UI.</p><ol><li>Those with access to the server running the services can <a href="https://kubernetes.io/docs/reference/kubectl/generated/kubectl_port-forward/" target="_blank" rel="noreferrer">port forward</a> the individual containers for each of the services and access them in their browser using the forwarded ports</li><li>On one or multiple machines, manually map the IP address of the FLAME Node server to a hostname</li></ol><h3 id="port-forward" tabindex="-1">Port Forward <a class="header-anchor" href="#port-forward" aria-label="Permalink to &quot;Port Forward&quot;">​</a></h3><h4 id="disable-ingress" tabindex="-1">Disable Ingress <a class="header-anchor" href="#disable-ingress" aria-label="Permalink to &quot;Disable Ingress&quot;">​</a></h4><p>When deploying the FLAME node without a hostname, the values file must be configured to disable ingress for the services:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  hub</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      robotUser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;Robot ID&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      robotSecret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;Robot Secret&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ingress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      hostname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span></code></pre></div><p>Be sure to still populate the <code>robotUser</code> and <code>robotSecret</code> with the credentials obtained from the Hub as well as the private key for the result service.</p><h4 id="accessing-the-services" tabindex="-1">Accessing the Services <a class="header-anchor" href="#accessing-the-services" aria-label="Permalink to &quot;Accessing the Services&quot;">​</a></h4><p>Once you have deployed the FLAME Node with the ingress disabled, three services need to be port-forwarded:</p><ul><li>Node UI</li><li>Hub Adapter</li><li>Keycloak</li></ul><h5 id="get-the-service-names" tabindex="-1">Get the Service Names <a class="header-anchor" href="#get-the-service-names" aria-label="Permalink to &quot;Get the Service Names&quot;">​</a></h5><p>Depending on what the helm deployment was named, the service names will vary. In our example above, we used <code>flame-node</code> for the release name so each of the services will have this as a prefix.</p><p>Get a list of currently running services (and their names) with</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> svc</span></span></code></pre></div><p><img src="`+n+`" alt="services.png"></p><h5 id="port-forward-the-services" tabindex="-1">Port Forward the Services <a class="header-anchor" href="#port-forward-the-services" aria-label="Permalink to &quot;Port Forward the Services&quot;">​</a></h5><p>Using the names obtained in the previous section, we can forward the ports these services are using to the same ports on our local machine:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> port-forward</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> svc/flame-node-node-ui-service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3000:3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> port-forward</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> svc/flame-node-hub-adapter-service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 5000:5000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> port-forward</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> svc/flame-node-keycloak</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8080:80</span></span></code></pre></div><p>Now you can access these services in your browser. For example, to access the Node UI, open a browser and navigate to <code>http://localhost:3000</code>.</p><h3 id="map-a-hostname" tabindex="-1">Map a Hostname <a class="header-anchor" href="#map-a-hostname" aria-label="Permalink to &quot;Map a Hostname&quot;">​</a></h3><p>It is possible to override a DNS entry by manually mapping an IP address to a hostname or URL in your local <code>hosts</code> file. On Unix systems, this file is often located at <code>/etc/hosts</code> and it Windows it can be found at <code>C:\\windows\\system32\\drivers\\etc\\hosts</code>. If you choose to do this, only the machines with this manual configuration will be able to access the Node UI.</p><h4 id="enable-offline-mode" tabindex="-1">Enable Offline Mode <a class="header-anchor" href="#enable-offline-mode" aria-label="Permalink to &quot;Enable Offline Mode&quot;">​</a></h4><p>Because the provided hostname is only resolvable on those machines for which the hostname and IP were manually mapped to one another, the k8s cluster will not be able to find the other services using this name. Thus, when deploying the FLAME Node in this manner, the Node UI and Hub Adapter must have <code>offline</code> set to <code>true</code> in their configurations so that they can still communicate with the included keycloak instance for client authentication.</p><p>Other settings can be left as though a FQDN is being used including enabling ingress and providing the locally resolvable hostname. Your <code>values.yaml</code> should look similar to this:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  hub</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      robotUser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;Robot ID&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      robotSecret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;Robot Secret&gt;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ingress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      hostname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://your.locally.resolvable.hostname</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flame-node-result-service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  hub</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    crypto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      privateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        -----BEGIN PRIVATE KEY-----</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        myExamplePrivateKey</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        -----END PRIVATE KEY-----</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flame-node-hub-adapter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  offline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flame-node-ui</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  offline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div>`,71)]))}const g=e(l,[["render",h]]);export{u as __pageData,g as default};
